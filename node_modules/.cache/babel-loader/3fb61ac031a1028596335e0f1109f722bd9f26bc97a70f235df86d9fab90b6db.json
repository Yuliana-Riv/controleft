{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport userService from '../services/user.service';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: () => import('../views/Home'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/services',\n  name: 'Services',\n  component: () => import('../views/Services'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/projects',\n  name: 'Projects',\n  component: () => import('../views/Projects'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/social-responsability',\n  name: 'SocialResponsability',\n  component: () => import('../views/SocialResponsability'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/blog',\n  name: 'Blog',\n  component: () => import('../views/blog'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/blog-content',\n  name: 'BlogContent',\n  component: () => import('../views/blogContent'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/about-us',\n  name: 'AboutUs',\n  component: () => import('../views/AboutUs.vue'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: () => import('../views/Login'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}, {\n  path: '/auth',\n  name: 'autentificacion',\n  component: () => import('../views/Autentificacion'),\n  meta: {\n    log: true,\n    admin: true,\n    auth: false\n  }\n}, {\n  path: '/administrador',\n  name: 'Dashboard',\n  component: () => import('../views/Dashboard'),\n  meta: {\n    log: true,\n    admin: true,\n    auth: true\n  }\n}, {\n  path: '*',\n  name: '404',\n  component: () => import('../views/Error404'),\n  meta: {\n    log: false,\n    admin: false,\n    auth: false\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  let meta_admin = to.matched.some(record => record.meta.admin);\n  let meta_log = to.matched.some(record => record.meta.log);\n  let meta_auth = to.matched.some(record => record.meta.auth);\n  let tokenexp = await userService.tokenexp();\n  let check = false; //comprobar si esta logeado\n  let admin = false;\n  let type = '';\n  if (tokenexp) {\n    // ver que el token no este expirado.\n    localStorage.removeItem('tkn');\n    localStorage.removeItem('ath'); //limpiar el localstorage\n    next();\n  }\n  let response = await userService.getData();\n  if (response.status == 'error') {\n    localStorage.removeItem('tkn');\n    localStorage.removeItem('ath');\n  }\n  if (response.status == 'success') {\n    //comprobar que sea un login valido.\n    check = true;\n    let isAdmin = userService.isAdmin(response.result);\n    admin = isAdmin.admin;\n    type = isAdmin.type;\n  }\n  let ath = await userService.getAth();\n\n  // borrar el localstorage cada que vayamos a login.\n\n  if (to.path === '/login' && check) {\n    localStorage.removeItem('tkn');\n    localStorage.removeItem('ath');\n    next();\n  }\n  if (meta_log) {\n    if (check) {\n      if (meta_admin) {\n        if (admin) {\n          if (meta_auth) {\n            if (ath) {\n              next();\n            } else {\n              localStorage.removeItem('tkn');\n              localStorage.removeItem('ath');\n              next('/login');\n            }\n          } else {\n            //...proximamente rutas que no requieran autentificacion\n            next();\n          }\n        } else {\n          localStorage.removeItem('tkn');\n          localStorage.removeItem('ath');\n          next('/');\n        }\n      } else {\n        if (admin) {\n          //no requiere admin pero es admin\n          next();\n        } else {\n          next();\n        }\n      }\n    } else {\n      next('/login');\n    }\n  } else {\n    if (check) {\n      if (admin) {\n        next();\n      } else {\n        next();\n      }\n    } else {\n      next();\n    }\n  }\n});\nconst clearLocalStorage = function () {\n  localStorage.removeItem('crt');\n  localStorage.removeItem('tkn');\n  localStorage.removeItem('ath');\n};\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","userService","use","routes","path","name","component","meta","log","admin","auth","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","meta_admin","matched","some","record","meta_log","meta_auth","tokenexp","check","type","localStorage","removeItem","response","getData","status","isAdmin","result","ath","getAth","clearLocalStorage"],"sources":["C:/Users/Dell Latitude/Documents/GitHub/controle_ft/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport userService from '../services/user.service'\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n\r\n    {\r\n      path: '/',\r\n      name: 'Home',\r\n      component: () => import('../views/Home'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    {\r\n      path: '/services',\r\n      name: 'Services',\r\n      component: () => import('../views/Services'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    {\r\n      path: '/projects',\r\n      name: 'Projects',\r\n      component: () => import('../views/Projects'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    {\r\n      path: '/social-responsability',\r\n      name: 'SocialResponsability',\r\n      component: () => import('../views/SocialResponsability'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    {\r\n      path: '/blog',\r\n      name: 'Blog',\r\n      component: () => import('../views/blog'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    {\r\n      path: '/blog-content',\r\n      name: 'BlogContent',\r\n      component: () => import('../views/blogContent'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    {\r\n      path: '/about-us',\r\n      name: 'AboutUs',\r\n      component: () => import('../views/AboutUs.vue'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    {\r\n      path: '/login',\r\n      name: 'login',\r\n      component: () => import('../views/Login'),\r\n      meta :{\r\n        log:false,\r\n        admin : false,\r\n        auth: false,\r\n      }\r\n    },\r\n    \r\n  {\r\n    path: '/auth',\r\n    name: 'autentificacion',\r\n    component: () => import('../views/Autentificacion'),\r\n    meta :{\r\n      log:true,\r\n      admin : true,\r\n      auth: false\r\n    }\r\n  },\r\n  {\r\n    path: '/administrador',\r\n    name: 'Dashboard',\r\n    component: () => import('../views/Dashboard'),\r\n    meta :{\r\n      log:true,\r\n      admin : true,\r\n      auth: true, \r\n    }\r\n  },\r\n\r\n  {\r\n    path: '*',\r\n    name: '404',\r\n    component: () => import('../views/Error404'),\r\n    meta :{\r\n     log:false,\r\n     admin : false,\r\n     auth: false\r\n    }\r\n  },\r\n\r\n\r\n   \r\n\r\n]\r\n\r\nconst router = new VueRouter({\r\n    mode: 'history',\r\n    base: process.env.BASE_URL,\r\n    routes\r\n})\r\n\r\nrouter.beforeEach( async (to, from, next) => {\r\n\r\n  let meta_admin = to.matched.some(record=>record.meta.admin);\r\n  let meta_log = to.matched.some(record=>record.meta.log);\r\n  let meta_auth = to.matched.some(record=>record.meta.auth);\r\n\r\n  let tokenexp = await userService.tokenexp()\r\n  let check =false //comprobar si esta logeado\r\n  let admin =false;\r\n  let type =''\r\n\r\n\r\n  if(tokenexp){ // ver que el token no este expirado.\r\n    localStorage.removeItem('tkn')\r\n    localStorage.removeItem('ath') //limpiar el localstorage\r\n    next()\r\n  }\r\n\r\n\r\n  let response = await userService.getData()\r\n\r\n  if(response.status =='error'){\r\n    localStorage.removeItem('tkn')\r\n    localStorage.removeItem('ath')\r\n  }\r\n\r\n\r\n  if(response.status=='success'){ //comprobar que sea un login valido.\r\n    check =true;\r\n    let isAdmin = userService.isAdmin(response.result);\r\n    admin = isAdmin.admin\r\n    type = isAdmin.type\r\n  \r\n  }\r\n\r\n  let ath = await userService.getAth();\r\n\r\n \r\n  // borrar el localstorage cada que vayamos a login.\r\n  \r\n  if(to.path==='/login' && check){\r\n    localStorage.removeItem('tkn')\r\n    localStorage.removeItem('ath')\r\n    \r\n    next()\r\n  }\r\n\r\n \r\n  if(meta_log){\r\n    if(check){\r\n      if(meta_admin){\r\n            if(admin){\r\n            \r\n              if(meta_auth){\r\n                if(ath){\r\n                  next();\r\n                }else{\r\n                  localStorage.removeItem('tkn')\r\n                  localStorage.removeItem('ath')\r\n                  next('/login')\r\n                }\r\n              }else{ //...proximamente rutas que no requieran autentificacion\r\n                next()\r\n              }\r\n             \r\n            }else{\r\n              localStorage.removeItem('tkn')\r\n              localStorage.removeItem('ath')\r\n              next('/')\r\n            }\r\n     }else{\r\n        if(admin){ //no requiere admin pero es admin\r\n          next()\r\n         }else{\r\n           next()\r\n         }\r\n      }\r\n    }else{\r\n      next('/login')\r\n    }\r\n    \r\n\r\n  }else{\r\n   \r\n    if(check){\r\n      if(admin){\r\n       next()\r\n      }else{\r\n        next();\r\n      }\r\n    }else{\r\n      next();\r\n    }\r\n\r\n  }\r\n\r\n \r\n});\r\n\r\nconst clearLocalStorage =  function(){\r\n    localStorage.removeItem('crt')\r\n    localStorage.removeItem('tkn')\r\n    localStorage.removeItem('ath')\r\n}\r\n\r\n\r\nexport default router\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}